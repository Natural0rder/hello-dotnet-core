pipeline:
  identifier: Build_Natural0rder_hello_dotnet_core_1743110282988
  name: Build hello-dotnet-core
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github
        repoName: Natural0rder/hello-dotnet-core
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
            key: cache-{{ checksum "packages.lock.json" }}
            paths:
              - /.local/share/NuGet/cache
          sharedPaths:
            - /.local/share/NuGet/cache
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  identifier: build_dotnet_app
                  name: Build DotNet App
                  spec:
                    shell: Sh
                    command: |-
                      echo "Welcome to Harness CI"
                      dotnet build ./helloworld-dotnetcore.csproj
              - step:
                  name: PushToDockerHub-FromTemplate
                  identifier: PushToDockerHubFromTemplate
                  template:
                    templateRef: BuildAndPushToDockerHub
                    versionLabel: Version1
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        type: CI
    - stage:
        name: Deploy
        identifier: Deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: hellodotnet
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: harnessdevenv
            deployToAll: false
            infrastructureDefinitions:
              - identifier: harnessk8sinfra
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
